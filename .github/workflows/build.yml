name: Alfresco Discord Bot

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

env:
  DOCKER_IMAGE_REF: quay.io/alfresco/alfresco-discord-bot

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-java-build@v1.37.0
      - name: "Build and Test"
        env:
          ALFRESCO_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
        run: ./mvnw -B -V install

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4.0.0
        id: build-image
        with:
          push: ${{ github.actor != 'dependabot[bot]' && github.ref_name == 'main' }}
          tags: ${{ env.DOCKER_IMAGE_REF }}:latest
          # workaround action limitation that cannot load image on local docker
          # if push was enabled
          load: ${{ github.ref_name != 'main' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Compute image id
        id: compute-image-id
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "imageid=$DOCKER_IMAGE_REF" >> "$GITHUB_OUTPUT"
          else
            echo "imageid=${{ steps.build-image.outputs.imageid }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Test container run
        id: run-container
        env:
          ALFRESCO_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
        run: echo "CID=$(docker run -d -e ALFRESCO_BOT_TOKEN=$ALFRESCO_BOT_TOKEN ${{ steps.compute-image-id.outputs.imageid }})" >> "$GITHUB_OUTPUT"

      - name: Wait just a little for the startup to complete or fail
        if: steps.run-container.outputs.CID != ''
        run: sleep 10

      - name: Inspect running state
        run: |
          set -o pipefail
          docker inspect ${{ steps.run-container.outputs.CID }} | jq -e '.[0].State.Running'

      - name: Print logs on failure
        if: failure()
        run: docker logs ${{ steps.run-container.outputs.CID }}
